[platformio]
env_default = ${sysenv.board}

[common]
platform = espressif8266
framework = arduino
monitor_speed = 115200
;src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/> -<setup.cpp>
; TODO: re-check if this is necessary or if we can go back to 80MHz
cpu_speed = 160000000L
lib_deps =
  https://github.com/ulno/WiFiManager.git
  ESP8266TrueRandom
  AsyncMqttClient
  DHT
  DallasTemperature
  FastLED
  U8g2
  1574

; integrated into project -> see how to reference library
;  I2Cdevlib-Core=https://github.com/ulno/i2cdevlib
;  I2Cdevlib-MPU6050: MPU6050 part from i2cdevlib

;  578: Sensors from James Smith: https://github.com/loopj/i2c-sensor-hal

; 1574: LiquidCrystal_I2C from Tony Kambo: https://github.com/tonykambo/LiquidCrystal_I2C
; 2824: MPU 6050 by tockn: https://github.com/tockn/MPU6050_tockn <- seems broken

; TODO: consider to use better library instead or in addition to 578 for sensor 
; fusing for MPU-9250: https://github.com/sparkfun/SparkFun_MPU-9250_Breakout_Arduino_Library

[env:nodemcu]
board = nodemcuv2
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}

[env:wemos_d1_mini]
board = d1_mini
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
lib_extra_dirs = /home/ulno/ulnoiot/tmp/testsystem/node1/build/wemos_cache
  
[env:wemos_d1_mini_pro]
board = d1_mini
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}

[env:olimex]
board = modwifi
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}

[env:esp-m]
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 921600
;build_flags = -Wl,-Teagle.flash.1m64.ld
build_flags = -Wl,-Teagle.flash.1m0.ld
;build_flags = -Wl,-Teagle.flash.512k0.ld
;build_flags = -Teagle.flash.1m0.ld

[env:sonoff]
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 115200
;build_flags = -Wl,-Teagle.flash.1m64.ld
build_flags = -Wl,-Teagle.flash.1m0.ld
;build_flags = -Wl,-Teagle.flash.512k0.ld
;build_flags = -Teagle.flash.1m0.ld

[env:esp8266]
# attention LED_INTERNAL might be mapped on 1
board = esp01_1m
platform = ${common.platform}
framework = ${common.framework}
monitor_speed = ${common.monitor_speed}
board_build.f_cpu = ${common.cpu_speed}
;src_filter = ${common.src_filter}
lib_deps = ${common.lib_deps}
board_build.flash_mode = dout
upload_resetmethod = nodemcu
upload_speed = 115200
;build_flags = -Wl,-Teagle.flash.1m64.ld
build_flags = -Wl,-Teagle.flash.1m0.ld
;build_flags = -Wl,-Teagle.flash.512k0.ld
;build_flags = -Teagle.flash.1m0.ld
