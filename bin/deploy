#!/bin/bash
if [[ $# -gt 1 || "$*" = "help" || "$*" = "-h" || "$*" = "--help" ]]; then
cat << EOF
Syntax: deploy [noupdate] [noreset]

deploy must be called from a node directory (or one of its parent system
directories) and reads its configuration from there.

It remotely deploys the user defined files (like autostart.py)
to the respective node(s).
If noupdate is not given, it will also call update to update the system files.
If noupdate is given this update is skipped and only the user files are
transferred.
noreset prevents the reset in the end of the copy process.

If it is called from a node's parent folder, it updates all nodes in
subdirectories of this parent folder.

EOF
exit 1
fi
# (updates and) deploys a node
# can be called from a node folder or from parent folder of node-folders
#
# if noupdate as parameter is given only the user-part is deployed
# (deploy is skipped)
# configuration files are not updated (TODO: consider making this possible)


[ "$ULNOIOT_ACTIVE" = "yes" ] || { echo "ulnoiot not active, aborting." 1>&2;exit 1; }


if [[ -e "node.conf" || -e "../node.conf" ]]; then  # started from node-directory
    source "$ULNOIOT_ROOT/bin/read_node_config"

    noupdate=""
    if [[ "$@" == *noupdate* ]]; then
        noupdate=1
    fi

    sync=""
    if [[ "$@" == *sync* ]]; then
        sync="--sync"
    fi

    if [[ "$@" == *noreset* ]]; then
        reset=""
    else
        reset="--reset"
    fi

    if [[ ! $noupdate ]]; then
        update noreset
    fi
    echo "Getting IP of node $topic for deployment."
    ip=$(get_ip "$topic" 2>/dev/null|grep "$topic"|cut -d\  -f2)
    if [ "$ip" ]; then
        echo "Deploying user files to node $topic with IP $ip."
        path="$(pwd)"
        cd "$ULNOIOT_ROOT/lib/netrepl"
        python3 copy.py "$ip" --keyfile "$path/key.hex" $sync \
            --src "$path/files/" $reset
    else
        echo "Couldn't find IP of node with topic $topic for deployment. Skipping."
        exit 1
    fi

else # started from somewhere else, so search for node.conf in subdirs

    path="$(pwd)"
    echo "This is not a node, so search sub-folders for node.conf files and"
    echo "deploy all of them."
    echo
    # TODO: think about runnning them all in parallel (or batches)
    find -name node.conf |\
        while read n; do
            cd "$path"
            cd $(dirname "$n")
            deploy "$@" # call recursive for node-dir
        done

fi # not in node-dir