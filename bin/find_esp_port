#!/bin/bash
# find esp port
#
# scan ports to see if there is an esp
#
# $1 can be a usb0-usb9 or acm0-acm9 as suggestion
# $2 can be a webrepl password
port=USB0

# find directory
dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
"$dir/check_dependencies" || exit 1
EXTERNAL="$dir/../external"
VPYTHON="$EXTERNAL/ulnoiot_vp/"
source "$VPYTHON/bin/activate" &>/dev/null

if [[ "$1" =~ ^[Uu][Ss][Bb][0-9]$ ]]; then
  port=USB${1:3:1}
elif [[ "$1" =~ ^[Aa][Cc][Mm][0-9]$ ]]; then
  port=ACM${1:3:1}
elif ping -c 2 -i 0.5 "$1" -W 2 &> /dev/null; then
  port="ws:$1,$2"
else
    # as no port is given, try to find one locally
    for p in USB0 USB1 USB2 USB3 USB4 USB5 USB6 USB7 USB8 USB9 \
             ACM0 ACM1 ACM2 ACM3 ACM4 ACM5 ACM6 ACM7 ACM8 ACM9; do
        # probe=$(esptool --port "/dev/tty$port" chip_id 2>/dev/null | grep "Chip ID:") # probe with reset
        probe=$(ls "/dev/tty$port") # softprobe -> no reset
        if [[ "$probe" ]]; then
            port=$p
            break
        fi
    done
    # sleep 1 # let the scan settle - when reset is executed
fi

echo $port
