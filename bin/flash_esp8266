#!/bin/bash
# flash esp8266 micropython
#
# $1 can give a tty port as destination parameter (for example: USB0)
#

#board_name="Wemos D1 mini"
board_name="Generic ESP8266"
# flash size should be autodetected in modern esptool
#flash_size=4 # wemos d1 mini 32m-bit=4m-byte flash http://www.wemos.cc/Products/d1_mini.html
#flash_size=2 # olimex
#flash_size=1 # sonoff flash is only 1m-byte

# 115200 seems safer and prevents problems with lesser quality ttl converters
baudrate=115200
#baudrate=230400
#baudrate=460800

[ "$ULNOIOT_ACTIVE" = "yes" ] || { echo "ulnoiot not active, aborting." 1>&2;exit 1; }

pushd . &> /dev/null

port=$(find_esp_port "$1")
tty="/dev/$port"
echo "Port: $tty"

# find firmware
cd "$ULNOIOT_EXTERNAL/firmware"
#firmware="$(ls esp*.bin|sort|tail -n1)"
firmware="firmware-combined.bin"
echo "Firmware: $firmware"

echo Performing erase flash.
esptool --port "$tty" erase_flash
sleep 1
echo Performing firmware flash.
esptool \
    --after hard_reset \
    --port "$tty" \
    --baud "$baudrate" \
    write_flash --verify \
        0 "$firmware"
# --flash_size="$flash_size"MB <- should now be autodetected

# Bring board in known state to allow direct deploy
sleep 1
echo "Do hardreset via mpfshell..."
mpfshell -c "open $port" -n --reset
sleep 4
echo "Hard-reset should be done now."
sleep 2
echo "Doing soft-reset."
board_reset "$1" "$2"
echo "Soft reset should be done now."

popd &> /dev/null

