#!/bin/bash
if [[ $# -gt 1 || "$*" = "help" || "$*" = "-h" || "$*" = "--help" ]]; then
cat << EOF
Syntax: update [noreset]

update must be called from a node directory (or one of its parent system
directories) and reads its configuration from there.

It remotely updates the system files of the respective node.

If it is called from a node's parent folder, it updates all nodes in
subdirectories of this parent folder.

If noreset is specified the final reset of the node is skipped.
(If noreset is not given the respective node is reset after its update)
EOF
exit 1
fi

[ "$ULNOIOT_ACTIVE" = "yes" ] || { echo "ulnoiot not active, aborting." 1>&2;exit 1; }

if [[ -e "node.conf" || -e "../node.conf" ]]; then  # started from node-directory
    source "$ULNOIOT_ROOT/bin/read_config"
    reset="--reset"
    if [[ "$1" = noreset ]]; then
        reset=""
    fi
    echo "Getting IP of node $topic for update."
    ip=$(get_ip "$topic" 2>/dev/null|grep "$topic"|cut -d\  -f2)
    if [ "$ip" ]; then
        echo "Updating system files on node $topic with IP $ip."
        path="$(pwd)"
        cd "$ULNOIOT_ROOT/lib/netrepl"
        # TODO: make board configurable
        python3 copy.py "$ip" --keyfile "$path/key.hex" --sync \
            --src "$ULNOIOT_ROOT/lib/boards/wemosd1mini/" $reset
    else
        echo "Couldn't find IP of node with topic $topic for update. Skipping."
        exit 1
    fi

else # started from somewhere else, so search for node.conf in subdirs

    path="$(pwd)"
    echo "This is not a node, so search sub-folders for node.conf files and"
    echo "update all of them."
    echo
    # TODO: think about runnning them all in parallel (or batches)
    find -name node.conf |\
        while read n; do
            cd "$path"
            cd $(dirname "$n")
            update "$@" # call recursive for node-dir
        done

fi # not in node-dir