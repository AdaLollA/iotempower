display(internal_name, "external_name", u8g2_display, font=font_medium);
display(internal_name, "external_name", [scl, sda,] font=font_medium);
display44780(internal_name, "external_name", width, height, 
  [scl, sda,] font=font_medium, i2c_addr=0x27);


Create a new controller for a "_1_" display supported by the u8g2 display library
(https://github.com/olikraus/u8g2) (_1_ is a specific mode to drive
the display).
Omitting the u82_display pre-selects a 128x64 ssd1306 lcd display connected via
I2C. Omitting scl and sda wil use the default hardware I2C bus.
With font, you can specify a text font defined in the u8gs library.
display44780 creates a controller for an I2C display driven by Hitachi's 
HD44780 chip (also called PCF8574T - for the I2C adapter - or 1602A orLCM1602).

"name" will be appended to the mqtt topic and a set appended to
send text and commands to.

Parameters:
- internal_name: name of variable to create to address this device inside
  this file by other devices or helper functions.
- external_name: the name it can be addressed via MQTT in the network.
- sda: the gpiopin for sda
- scl: the gpiopin for scl
- width/height: dimensions of display in pixels
- addr: the i2c address of the display.
  For the 44780 with the PCF8574T, it's usually 0x27 (default)
  but sometimes 0x38.
  This is usually 0x3c for the SSD1306, but sometimes 0x3d - then the adress
  needs to be set in the definition of the u8g2 display device. 
  (on the SSD1306 display it says 0x7a or 0x78 respectively)

Example:
display(dp, "dp1", d4, d3)

Now the display can be controlled via sending to the mqtt-broker
to the topic "node_topic/dp1" different text or commands.
Normal text will be printed as text - scrolling is supported.
There are also these special commands:
&&clear or &&cl                 to clear the display
&&goto x y or &&goto x y        to set the text cursor (1 1 is upper left)
&&nl or &&ln                    to go to next line and evtl. scroll display
